name: test_and_deploy_workflow

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return
        pip install -r backend/foodgram/requirements.txt 
    - name: Test with flake8
      run: |
        python -m flake8
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub backend
        uses: docker/build-push-action@v2 
        with:
          context: ./backend/foodgram
          push: true
          tags: thisispetrovich/foodgram_backend
      - name: Push to Docker Hub frontend
        uses: docker/build-push-action@v2 
        with:
          context: ./frontend
          push: true
          tags: thisispetrovich/foodgram_frontend
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker pull thisispetrovich/foodgram_backend:latest
          sudo docker pull thisispetrovich/foodgram_frontend
          sudo docker compose stop
          sudo docker compose rm foodgram_backend
          sudo docker compose rm foodgram_frontend
          rm .env
          touch .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
          sudo docker compose up -d --build