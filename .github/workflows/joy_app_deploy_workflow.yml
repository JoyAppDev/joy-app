name: deploy_workflow

on: [push, pull_request]

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Push to Docker Hub backend
        uses: docker/build-push-action@v2 
        with:
          context: ./Backend/joy_app
          push: true
          tags: andrianovaei/joy_app_backend
      # - name: Push to Docker Hub frontend
      #   uses: docker/build-push-action@v2 
      #   with:
      #     context: ./frontend
      #     push: true
      #     tags: thisispetrovich/foodgram_frontend
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          sudo docker pull andrianovaei/joy_app_backend:latest
          sudo docker compose stop
          sudo docker compose rm andrianovaei/joy_app_backend
          rm .env
          touch .env
          echo APIKEY=${{ secrets.APIKEY }} >> .env
          echo AUTHDOMAIN=${{ secrets.AUTHDOMAIN }} >> .env
          echo PROJECTID=${{ secrets.PROJECTID }} >> .env
          echo STORAGEBUCKET=${{ secrets.STORAGEBUCKET }} >> .env
          echo MESSAGINGSENDERID=${{ secrets.MESSAGINGSENDERID }} >> .env
          echo APPID=${{ secrets.APPID }} >> .env
          echo DATABASEURL=${{ secrets.DATABASEURL }} >> .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
          sudo docker compose up -d --build